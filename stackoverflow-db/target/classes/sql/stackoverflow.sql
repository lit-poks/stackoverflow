
--USERS table is created to store the details of all the users
DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE IF NOT EXISTS USERS(
    ID SERIAL PRIMARY KEY,
    UUID VARCHAR(200) NOT NULL,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    USERNAME VARCHAR(30) UNIQUE NOT NULL,
    EMAIL VARCHAR(50) UNIQUE NOT NULL ,
    PASSWORD VARCHAR(255) NOT NULL,
    SALT VARCHAR(200) NOT NULL,
    COUNTRY VARCHAR(30),
    ABOUT_ME VARCHAR(50),
    DOB VARCHAR(30),
    ROLE VARCHAR(30),
    CONTACT_NUMBER VARCHAR(30)
);


INSERT INTO USERS(ID, UUID, FIRST_NAME, LAST_NAME, USERNAME, EMAIL, PASSWORD, SALT, COUNTRY, ABOUT_ME, DOB, ROLE, CONTACT_NUMBER)
	VALUES (101,'rdtrdtdyt','Palash','Tripathi','palash','p@upgrad.com','507FF5FED1CAC746','8Xt6jxoCI3MWsVaKY/1ySAp2qzlb2Z7P89+vDrb1o6U=', 'India' ,'I am @ UpGrad' ,'23-12-1992' , 'admin' , '1222333333' );


--USER_AUTH table is created to store the login information of all the users
DROP TABLE IF EXISTS USER_AUTH CASCADE;
CREATE TABLE IF NOT EXISTS USER_AUTH(
	ID BIGSERIAL PRIMARY KEY,
	UUID VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	ACCESS_TOKEN VARCHAR(500) NOT NULL,
	EXPIRES_AT TIMESTAMP NOT NULL,
	LOGIN_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	LOGOUT_AT TIMESTAMP NULL
);

ALTER TABLE USER_AUTH ADD CONSTRAINT FK_USER_AUTH_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;

--QUESTION table is created to store the questions related information posted by any user in the Application
DROP TABLE IF EXISTS QUESTION CASCADE;
CREATE TABLE IF NOT EXISTS QUESTION(
    ID SERIAL,
    UUID VARCHAR(200) NOT NULL,
    CONTENT VARCHAR(500) NOT NULL,
    DATE TIMESTAMP NOT NULL,
    USER_ID INTEGER NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE
);


--ANSWER table is created to store the answers related information in reply to any question posted in the Application
DROP TABLE IF EXISTS ANSWER CASCADE;
CREATE TABLE IF NOT EXISTS ANSWER(
    ID SERIAL,
    UUID VARCHAR(200) NOT NULL,
    ANS VARCHAR(255) NOT NULL,
    DATE TIMESTAMP NOT NULL ,
    USER_ID INTEGER NOT NULL,
    QUESTION_ID INTEGER NOT NULL ,
    PRIMARY KEY(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
    FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION(ID) ON DELETE CASCADE
);
